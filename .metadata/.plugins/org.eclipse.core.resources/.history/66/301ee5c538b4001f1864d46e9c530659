package controller;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.List;

import model.Model;
import view.MainView;
public class Controller {
	
    private MainView mainView;
    private Model model;

	public Controller (MainView mainView, Model model) {
		this.mainView=mainView;
		this.model=model;
		initEventHandlers();
	}
	
	public void initEventHandlers()
	{
		mainView.setVisible(true);
		
		mainView.btnSimulate.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				LocalDateTime now = LocalDateTime.now();   
		        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyyMMdd_HHmmss_SSS");        
		        String starttimestamp = now.format(formatter);
		        File directoryMP = new File ("./docs/"+starttimestamp+"/MP");
		        File directoryMT = new File ("./docs/"+starttimestamp+"/MT");
		        boolean MTcreated = directoryMT.mkdirs();
		        boolean MPcreated = directoryMP.mkdirs();
	
		        
				int type1ToProduce = Integer.parseInt(mainView.protein1.getText());
				int type2ToProduce = Integer.parseInt(mainView.protein2.getText());
				int type3ToProduce = Integer.parseInt(mainView.protein3.getText());
				int type4ToProduce = Integer.parseInt(mainView.protein4.getText());
				int total = type1ToProduce+type2ToProduce+type3ToProduce+type4ToProduce;
				
				//MULTIPROCESO
				double startTime = System.currentTimeMillis(); 
				for (int i =0; i<type1ToProduce;i++)
					
				{
					model.LaunchMultiprocess("1",i, directoryMP);
					
				}
				
				for (int i =0; i<type2ToProduce;i++)
				{
					model.LaunchMultiprocess("2",i, directoryMP);
						
				}
				for (int i =0; i<type3ToProduce;i++)
				{
					model.LaunchMultiprocess("3",i, directoryMP);
					
				}
				for (int i =0; i<type4ToProduce;i++)
				{
					model.LaunchMultiprocess("4",i, directoryMP);
				}
				
				double result;
				while ((result=model.checkComplete(directoryMP, total))==0)
				{    }
				
				double endTime = System.currentTimeMillis();
				mainView.lblmp.setText("tiempo MP: "+(endTime-startTime)+"ms"+" "+result);
				
				//MULTIHILO
				startTime = System.currentTimeMillis();
				for (int i =0; i<type1ToProduce;i++)
					
				{
					model.lanzarSimulacionMT("1",i, directoryMT);
					
				}
				
				for (int i =0; i<type2ToProduce;i++)
				{
					model.lanzarSimulacionMT("2",i, directoryMT);
						
				}
				for (int i =0; i<type3ToProduce;i++)
				{
					model.lanzarSimulacionMT("3",i, directoryMT);
					
				}
				for (int i =0; i<type4ToProduce;i++)
				{
					model.lanzarSimulacionMT("4",i, directoryMT);
				}
				while (model.checkComplete(directoryMT, total)==0)
				{ }
				endTime = System.currentTimeMillis();
				mainView.lblmt.setText("tiempo MT: "+(endTime-startTime)+"ms");
			}
		});
	}
	
}
