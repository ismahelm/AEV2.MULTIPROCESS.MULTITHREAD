package controller;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.util.ArrayList;
import java.util.List;

import model.Model;
import view.MainView;
public class Controller {
	
    private MainView mainView;
    private Model model;

	public Controller (MainView mainView, Model model) {
		this.mainView=mainView;
		this.model=model;
		initEventHandlers();
	}
	public static void LaunchMultiprocess(String type, int i)
		{
		String clase = "calculadoraMP.calcularProteinas"; //ruta de la clase que se lanza
		try {
			String javaHome = System.getProperty("java.home"); //ruta de java
			String javaBin = javaHome + File.separator+"bin"+File.separator+"java"; //ruta del bin de java
			String classPath = System.getProperty("java.class.path");
			String className = clase;
			//construir comando
			List<String> command = new ArrayList<>();
			command.add(javaBin);	
			command.add("-cp");	
			command.add(classPath);	
			command.add(className);
			//parametros concretos para la funcion
			command.add(type);	
			command.add(String.valueOf(i));	
			//lanzar processbuilder
			ProcessBuilder builder = new ProcessBuilder(command);
			Process process = builder.inheritIO().start();
			
		}
		catch(Exception ex)
			{
			ex.printStackTrace();
			}
		
		}

	public void initEventHandlers()
	{
		mainView.setVisible(true);
		
		mainView.btnSimulate.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				
				int type1ToProduce = Integer.parseInt(mainView.protein1.getText());
				int type2ToProduce = Integer.parseInt(mainView.protein2.getText());
				int type3ToProduce = Integer.parseInt(mainView.protein3.getText());
				int type4ToProduce = Integer.parseInt(mainView.protein4.getText());
				for (int i =0; i<type1ToProduce;i++)
					
				{
					model.LaunchMultiprocess("1",i);
					model.lanzarSimulacionMT("1",i);
					
				}
				
				for (int i =0; i<type2ToProduce;i++)
				{
					model.LaunchMultiprocess("2",i);
					model.lanzarSimulacionMT("2",i);
						
				}
				for (int i =0; i<type3ToProduce;i++)
				{
					model.LaunchMultiprocess("3",i);
					model.lanzarSimulacionMT("3",i);
					
				}
				for (int i =0; i<type4ToProduce;i++)
				{
					model.LaunchMultiprocess("4",i);
					model.lanzarSimulacionMT("4",i);
				}
				
			}
		});
	}
	
}
