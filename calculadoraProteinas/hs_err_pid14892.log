#
# There is insufficient memory for the Java Runtime Environment to continue.
# Native memory allocation (mmap) failed to map 266338304 bytes. Error detail: G1 virtual space
# Possible reasons:
#   The system is out of physical RAM or swap space
#   This process is running with CompressedOops enabled, and the Java Heap may be blocking the growth of the native heap
# Possible solutions:
#   Reduce memory load on the system
#   Increase physical memory or swap space
#   Check if swap backing store is full
#   Decrease Java heap size (-Xmx/-Xms)
#   Decrease number of Java threads
#   Decrease Java thread stack sizes (-Xss)
#   Set larger code cache with -XX:ReservedCodeCacheSize=
#   JVM is running with Zero Based Compressed Oops mode in which the Java heap is
#     placed in the first 32GB address space. The Java Heap base address is the
#     maximum limit for the native heap growth. Please use -XX:HeapBaseMinAddress
#     to set the Java Heap base and to place the Java Heap above 32GB virtual address.
# This output file may be truncated or incomplete.
#
#  Out of Memory Error (os_windows.cpp:3631), pid=14892, tid=42084
#
# JRE version:  (22.0.2+9) (build )
# Java VM: Java HotSpot(TM) 64-Bit Server VM (22.0.2+9-70, mixed mode, sharing, tiered, compressed oops, compressed class ptrs, g1 gc, windows-amd64)
# No core dump will be written. Minidumps are not enabled by default on client versions of Windows
#

---------------  S U M M A R Y ------------

Command Line: calculadoraMP.calcularProteinas 2 27 C:\Users\Ismael\Desktop\DAM\2º\servicios y procesos\aev2\calculadoraProteinas\.\docs\20241207_012931_847\MP

Host: AMD Ryzen 5 5500                               , 12 cores, 15G,  Windows 11 , 64 bit Build 22621 (10.0.22621.4391)
Time: Sat Dec  7 01:29:42 2024 Hora estándar romance elapsed time: 1.969919 seconds (0d 0h 0m 1s)

---------------  T H R E A D  ---------------

Current thread (0x0000026d009e96f0):  JavaThread "Unknown thread" [_thread_in_vm, id=42084, stack(0x000000ab30400000,0x000000ab30500000) (1024K)]

Stack: [0x000000ab30400000,0x000000ab30500000]
Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)
